{"ast":null,"code":"import { all, fork, put, delay, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, FOLLOW_REQUEST, UNFOLLOW_REQUEST, LOAD_USER_REQUEST, LOAD_USER_FAILURE, LOAD_USER_SUCCESS, CHANGE_NICKNAME_REQUEST } from \"../reducers/user\";\nimport { LOAD_POSTS_SUCCESS } from \"../reducers/post\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction changeNicknameAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    // yield delay(1000);\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/jhunderdog/NBF/sagas/user.js"],"names":["all","fork","put","delay","takeLatest","call","axios","LOG_IN_SUCCESS","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","FOLLOW_REQUEST","UNFOLLOW_REQUEST","LOAD_USER_REQUEST","LOAD_USER_FAILURE","LOAD_USER_SUCCESS","CHANGE_NICKNAME_REQUEST","LOAD_POSTS_SUCCESS","loadUserAPI","get","logInAPI","data","post","logOutAPI","signUpAPI","followAPI","unfollowAPI","changeNicknameAPI","changeNickname","action","result","type","err","error","response","loadUser","unfollow","follow","logIn","logOut","signUp","console","log","watchChangeNickname","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, delay, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  LOG_IN_SUCCESS,\n  LOG_IN_REQUEST,\n  LOG_IN_FAILURE,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_OUT_FAILURE,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_REQUEST,\n  SIGN_UP_FAILURE,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  FOLLOW_REQUEST,\n  UNFOLLOW_REQUEST,\n  LOAD_USER_REQUEST,\n  LOAD_USER_FAILURE,\n  LOAD_USER_SUCCESS,\n  CHANGE_NICKNAME_REQUEST,\n} from \"../reducers/user\";\nimport { LOAD_POSTS_SUCCESS } from \"../reducers/post\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction changeNicknameAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    \n    const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    // yield delay(1000);\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n"]},"metadata":{},"sourceType":"module"}