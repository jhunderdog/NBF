{"ast":null,"code":"var _jsxFileName = \"/Users/jhunderdog/NBF/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      retweetError = _useSelector2.retweetError;\n\n  useEffect(function () {\n    console.log('rerender');\n\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var lastId = mainPosts[mainPosts.length - 1].id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, _this), mainPosts.map(function (post, index) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"eO+QMWR+/tIpNUDFV1MauWXrqHY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home; //코드스플리팅\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jhunderdog/NBF/pages/index.js"],"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_USER_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","retweetError","console","log","alert","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    console.log('rerender');\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n    })\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      console.log(\n        window.scrollY,\n        document.documentElement.clientHeight,\n        document.documentElement.scrollHeight\n      );\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1].id\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post, index) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n\n//코드스플리팅\n"]},"metadata":{},"sourceType":"module"}