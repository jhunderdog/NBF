{"ast":null,"code":"import React, { useState, useCallback, useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport styled from \"styled-components\";\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport Router from 'next/router';\nimport axios from \"axios\";\nimport wrapper from \"../store/configureStore\";\nimport { END } from \"redux-saga\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const [email, onChangeEmail] = useInput(\"\");\n  const [nickname, onChangeNickname] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const {\n    0: term,\n    1: setTerm\n  } = useState(\"\");\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const onSumbit = useCallback(() => {\n    if (password != passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | NordBird\"\n      })\n    }), /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSumbit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-email\",\n          type: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-email\",\n          value: email,\n          onChange: onChangeEmail\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-id\",\n          value: nickname,\n          onChange: onChangeNickname\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-id\",\n          value: password,\n          onChange: onChangePassword\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password=check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordCheck\n        }), passwordError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uB9D0 \\uC798\\uB4E4\\uC5B4\\uB77C?\"\n        }), termError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4. \"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: 100\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"pimary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        })\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["/Users/jhunderdog/NBF/pages/signup.js"],"names":["React","useState","useCallback","useEffect","AppLayout","Head","Form","Input","Checkbox","Button","useInput","styled","SIGN_UP_REQUEST","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","Router","axios","wrapper","END","ErrorMessage","div","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","id","replace","alert","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","termError","setTermError","term","setTerm","onChangeTerm","e","target","checked","onChangePasswordCheck","value","onSumbit","console","log","type","data","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport styled from \"styled-components\";\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport Router from 'next/router';\nimport axios from \"axios\";\nimport wrapper from \"../store/configureStore\";\nimport { END } from \"redux-saga\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const { signUpLoading, signUpDone, signUpError, me } =useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n\n  useEffect(()=> {\n    if (signUpError){\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const [email, onChangeEmail] = useInput(\"\");\n  const [nickname, onChangeNickname] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n  const [term, setTerm] = useState(\"\");\n\n  const onChangeTerm = useCallback((e) => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setPasswordError(e.target.value !== password);\n    },\n    [password]\n  );\n\n  const onSumbit = useCallback(() => {\n    if (password != passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!term) {\n      return setTermError(true);\n    }\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: { email, password, nickname },\n    });\n  }, [email, password, passwordCheck, term]);\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>회원가입 | NordBird</title>\n      </Head>\n      <Form onFinish={onSumbit}>\n        <div>\n          <label htmlFor=\"user-email\" type=\"email\">\n            이메일\n          </label>\n          <br />\n          <Input name=\"user-email\" value={email} onChange={onChangeEmail} />\n        </div>\n        <div>\n          <label htmlFor=\"user-id\">닉네임</label>\n          <br />\n          <Input name=\"user-id\" value={nickname} onChange={onChangeNickname} />\n        </div>\n        <div>\n          <label htmlFor=\"user-id\">비밀번호</label>\n          <br />\n          <Input name=\"user-id\" value={password} onChange={onChangePassword} />\n        </div>\n        <div>\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\n          <br />\n          <Input\n            name=\"user-password=check\"\n            type=\"password\"\n            value={passwordCheck}\n            required\n            onChange={onChangePasswordCheck}\n          />\n          {passwordError && (\n            <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>\n          )}\n        </div>\n        <div>\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\n            말 잘들어라?\n          </Checkbox>\n          {termError && <ErrorMessage>약관에 동의하셔야 합니다. </ErrorMessage>}\n        </div>\n        <div style={{ marginTop: 100 }}>\n          <Button type=\"pimary\" htmlType=\"submit\" loading={signUpLoading}>\n            가입하기\n          </Button>\n        </div>\n      </Form>\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n \n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}