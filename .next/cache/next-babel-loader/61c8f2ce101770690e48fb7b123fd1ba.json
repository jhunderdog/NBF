{"ast":null,"code":"import { all, fork, call, take, put, takeEvery, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000); // const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: \"ADD_POST_SUCCESS\" //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/vegabond/NBF/sagas/index.js"],"names":["all","fork","call","take","put","takeEvery","takeLatest","delay","axios","addPostAPI","data","post","addPost","action","type","err","response","watchLogIn","logIn","watchLogOut","logOut","watchAddPost","rootSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,UAPF,EAQEC,KARF,QASO,oBATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAID,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMN,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMH,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,kBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,kBADE;AAERJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFX,KAAD,CAAT;AAID;AACF;;AACD,UAAUO,UAAV,GAAuB;AACrB,QAAMX,UAAU,CAAC,gBAAD,EAAmBY,KAAnB,CAAhB;AACD;;AAED,UAAUC,WAAV,GAAwB;AACtB,QAAMb,UAAU,CAAC,iBAAD,EAAoBc,MAApB,CAAhB;AACD;;AAED,UAAUC,YAAV,GAAyB;AACvB,QAAMf,UAAU,CAAC,kBAAD,EAAqBM,OAArB,CAAhB;AACD;;AACD,eAAe,UAAUU,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CAACC,IAAI,CAACgB,UAAD,CAAL,EAAmBhB,IAAI,CAACkB,WAAD,CAAvB,EAAsClB,IAAI,CAACoB,YAAD,CAA1C,CAAD,CAAT;AACD","sourcesContent":["import {\n  all,\n  fork,\n  call,\n  take,\n  put,\n  takeEvery,\n  takeLatest,\n  delay,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\n\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\n\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}