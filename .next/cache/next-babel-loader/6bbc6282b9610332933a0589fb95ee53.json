{"ast":null,"code":"var _jsxFileName = \"/Users/jhunderdog/NBF/components/PostCard.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./Postimages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post); // const [liked, setLiked] = useState(false);\n\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  const onRetweet = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const liked = post.Likers.find(v => v.id === id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), \")\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)],\n      title: post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null,\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }, this),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 42\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: `/user/${post.Retweet.User.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post.Retweet.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.Retweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 27\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nPostCard.propType = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequred\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/jhunderdog/NBF/components/PostCard.js"],"names":["React","useState","useCallback","useEffect","PropTypes","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","Link","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","PostCard","post","dispatch","removePostLoading","state","commentFormOpened","setCommentFormOpened","id","user","me","onLike","alert","type","data","onUnLike","onToggleComment","prev","onRemovePost","onRetweet","liked","Likers","find","v","marginBottom","Images","User","RetweetId","nickname","Retweet","content","Comments","length","item","propType","shape","number","object","string","createdAt","arrayOf","objectOf","any","isRequred"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n  HeartTwoTone,\n} from \"@ant-design/icons\";\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./Postimages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n  const { removePostLoading } = useSelector((state) => state.post);\n  // const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me?.id);\n\n  \n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id,\n    })\n  }, []);\n\n  const onUnLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    } \n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id,\n    })\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  });\n  const onRetweet = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다');\n    }\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id,\n    })\n  }, [id]);\n  \n  const liked = post.Likers.find((v) => v.id === id);\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet}/>,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              onClick={onUnLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onLike} />\n          ),\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button\n                      type=\"danger\"\n                      loading={removePostLoading}\n                      onClick={onRemovePost}\n                    >\n                      삭제\n                    </Button>\n                    )\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        title={post.RetweetId? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\n        extra={id && <FollowButton post={post} />}\n      >\n        {post.RetweetId && post.Retweet \n        ? (\n          <Card\n        cover={post.Retweet.Images[0] && <PostImages images={post.Retweet.Images} />}\n        >\n          <Card.Meta\n          avatar={<Link href={`/user/${post.Retweet.User.id}`}><a><Avatar>{post.Retweet.User.nickname[0]}</Avatar></a></Link>}\n          title={post.Retweet.User.nickname}\n          description={<PostCardContent postData={post.Retweet.content} />}\n        />\n        </Card>\n\n        ) \n        \n        : (<Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n          />\n          )}\n        \n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propType = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequred,\n};\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}