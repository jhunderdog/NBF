{"ast":null,"code":"import React from 'react';\nimport { useRouter } from 'next/router';\nimport AppLayout from '../../components/AppLayout';\nimport { useSelector } from 'react-redux';\nimport PostCard from '../../components/PostCard';\nimport Head from \"next/head\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Post = function Post() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost; // if (router.isFallback) {\n  //     return <div>로딩중...</div>\n  // }\n\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'http://localhost:3060/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:url\",\n        content: \"https://nodebird.com/post/\".concat(id)\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n}; // export async function getStaticPaths() {\n//     return {\n//         paths: [\n//             {params: {id: '1'}},\n//             {params: {id: '2'}},\n//         ],\n//         fallback: false,\n//     }\n// }\n\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["/Users/jhunderdog/NBF/pages/post/[id].js"],"names":["React","useRouter","AppLayout","useSelector","PostCard","Head","Post","router","id","query","state","post","singlePost","User","nickname","content","Images","src"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAMA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAQO,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;;AACA,qBAAuBL,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR,CAHe,CAKf;AACA;AACA;;;AACA,sBACI,MAAC,SAAD;AAAA,4BACI,MAAC,IAAD;AAAA,8BACI;AAAA,mBACKA,UAAU,CAACC,IAAX,CAAgBC,QADrB;AAAA,QADJ,eAKI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,UAAU,CAACG;AAA7C,QALJ,eAMI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAAjC,QANJ,eAOI;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,OAAO,EAAEF,UAAU,CAACG;AAAhD,QAPJ,eAQI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEH,UAAU,CAACI,MAAX,CAAkB,CAAlB,IAAuBJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAAjF,QARJ,eASI;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,OAAO,sCAA+BT,EAA/B;AAA3B,QATJ;AAAA,MADJ,eAaA,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEI;AAAhB,MAbA;AAAA,IADJ;AAiBH,CAzBD,C,CA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAkBA,eAAeN,IAAf","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { END } from 'redux-saga';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/AppLayout';\nimport { useSelector } from 'react-redux';\nimport PostCard from '../../components/PostCard';\nimport Head from \"next/head\";\n\nconst Post = () => {\n    const router = useRouter(); \n    const { id } = router.query;\n    const { singlePost } = useSelector((state) => state.post);\n\n    // if (router.isFallback) {\n    //     return <div>로딩중...</div>\n    // }\n    return (\n        <AppLayout>\n            <Head>\n                <title>\n                    {singlePost.User.nickname}\n                    님의 글\n                </title>\n                <meta name=\"description\" content={singlePost.content}/>\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`}/>\n                <meta name=\"og:description\" content={singlePost.content}/>\n                <meta name=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'http://localhost:3060/favicon.ico'}/>\n                <meta name=\"og:url\" content={`https://nodebird.com/post/${id}`}/>\n\n            </Head>\n        <PostCard post={singlePost}/>\n        </AppLayout>\n    )\n};\n// export async function getStaticPaths() {\n//     return {\n//         paths: [\n//             {params: {id: '1'}},\n//             {params: {id: '2'}},\n//         ],\n//         fallback: false,\n//     }\n// }\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    console.log(context);\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n        type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n        type: LOAD_POST_REQUEST,\n        data: context.params.id,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n})\nexport default Post;"]},"metadata":{},"sourceType":"module"}