{"ast":null,"code":"var _jsxFileName = \"/Users/vegabond/NBF/components/CommentForm.js\";\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommenetDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  useEffect(() => {\n    if (addCommenetDone) {\n      setCommentText(\"\");\n    }\n  });\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: true,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.prototyps = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/vegabond/NBF/components/CommentForm.js"],"names":["Form","Input","Button","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommenetDone","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","prototyps","object","isRequired"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAsBT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAvC;AACA,QAAM,CAACO,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDf,QAAQ,CAAC,EAAD,CAAnE;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,eAAJ,EAAqB;AACnBG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,CAAT;AAKA,QAAMC,eAAe,GAAGlB,WAAW,CAAC,MAAM;AACxCmB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACE,EAAjB,EAAqBK,WAArB;AACAN,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEf,mBADC;AAEPgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEhB,IAAI,CAACE,EAArC;AAAyCe,QAAAA,MAAM,EAAEf;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACK,WAAD,EAAcL,EAAd,CANgC,CAAnC;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAEZ,WADT;AAEE,QAAA,QAAQ,EAAEC,mBAFZ;AAGE,QAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEU,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SADT;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnCD;;AAqCAtB,WAAW,CAACuB,SAAZ,GAAwB;AACtBtB,EAAAA,IAAI,EAAEL,SAAS,CAAC4B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAezB,WAAf","sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommenetDone } = useSelector((state) => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  useEffect(() => {\n    if (addCommenetDone) {\n      setCommentText(\"\");\n    }\n  });\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea\n          value={commentText}\n          onChange={onChangeCommentText}\n          rows={4}\n        />\n        <Button\n          style={{ position: \"absolute\", right: 0, bottom: -40 }}\n          type=\"primary\"\n          htmlType\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.prototyps = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}