{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\"; // import faker from \"faker\";\n\nexport var initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n}; // export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map((v, i) => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: faker.image.image() }],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\n\nexport var UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport var UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport var UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var LOAD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var LOAD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\nexport var LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\nexport var LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\nexport var LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\nexport var LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\nexport var LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case LOAD_USER_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_USER_POSTS_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = draft.mainPosts.length === 10;\n        break;\n\n      case LOAD_USER_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex(\n          //   (y) => y.id === action.data.postId\n          // );\n          // const post = state.mainPosts[postIndex];\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jhunderdog/NBF/reducers/post.js"],"names":["shortId","produce","initialState","mainPosts","singlePost","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","dummyPost","id","content","User","nickname","Images","Comments","dummyComment","generate","reducer","state","action","draft","unshift","error","filter","v","i","post","find","PostId","Likers","push","UserId","concat","length"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\n// import faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePosts: true,\n\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n\n  \n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n};\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map((v, i) => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [{ src: faker.image.image() }],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\n\n\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\n\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\n\nexport const LOAD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\nexport const LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\nexport const LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\n\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\n\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"제로초\", \n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS: {\n        \n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case REMOVE_IMAGE: \n      draft.imagePaths = draft.imagePaths.filter((v,i)=> i !== action.data);\n      \n      break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {    \n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST: \n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;        \n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n        \n        case LOAD_POST_REQUEST:\n          draft.loadPostLoading = true;\n          draft.loadPostDone = false;\n          draft.loadPostError = null;\n          break;\n        case LOAD_POST_SUCCESS:\n          draft.loadPostLoading = false;\n          draft.loadPostDone = true;\n          draft.singlePost = action.data;\n          \n          break;\n  \n        case LOAD_POST_FAILURE:\n          draft.addPostLoading = false;\n          draft.addPostError = action.error;\n          break;\n\n\n      case LOAD_USER_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_USER_POSTS_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:          \n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = draft.mainPosts.length === 10;\n        break;\n\n      case LOAD_USER_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex(\n        //   (y) => y.id === action.data.postId\n        // );\n        // const post = state.mainPosts[postIndex];\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}