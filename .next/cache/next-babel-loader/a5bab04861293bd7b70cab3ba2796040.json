{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork, call, take } from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction logIn() {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(logInAPI);\n\n        case 2:\n          result = _context.sent;\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take(\"LOG_IN\");\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return take(\"LOG_OUT\");\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return take(\"ADD_POST\");\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/vegabond/NBF/sagas/index.js"],"names":["logIn","watchLogIn","watchLogOut","watchAddPost","rootSaga","all","fork","call","take","logInAPI","axios","post","result"],"mappings":";;oDAMUA,K;qDAGAC,U;qDAIAC,W;qDAIAC,Y;qDAGeC,Q;;AApBzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,QAAsC,oBAAtC;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,SAAUX,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACmB,iBAAMO,IAAI,CAACE,QAAD,CAAV;;AADnB;AACUG,UAAAA,MADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUX,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,IAAI,CAAC,QAAD,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUN,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,IAAI,CAAC,SAAD,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUL,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMK,IAAI,CAAC,UAAD,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAe,SAAUJ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACC,IAAI,CAACL,UAAD,CAAL,EAAmBK,IAAI,CAACJ,WAAD,CAAvB,EAAsCI,IAAI,CAACH,YAAD,CAA1C,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, call, take } from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction *logIn() {\n    const result = yield call(logInAPI)\n}\nfunction* watchLogIn() {\n  yield take(\"LOG_IN\");\n}\n\nfunction* watchLogOut() {\n  yield take(\"LOG_OUT\");\n}\n\nfunction* watchAddPost() {\n  yield take(\"ADD_POST\");\n}\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}