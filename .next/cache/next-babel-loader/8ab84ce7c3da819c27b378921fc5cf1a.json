{"ast":null,"code":"import { all, fork, put, delay, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, FOLLOW_REQUEST, UNFOLLOW_REQUEST, LOAD_USER_REQUEST, LOAD_USER_FAILURE, LOAD_USER_SUCCESS, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from \"../reducers/user\";\nimport { LOAD_POSTS_SUCCESS } from \"../reducers/post\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    // yield delay(1000);\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/jhunderdog/NBF/sagas/user.js"],"names":["all","fork","put","delay","takeLatest","call","axios","LOG_IN_SUCCESS","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","FOLLOW_REQUEST","UNFOLLOW_REQUEST","LOAD_USER_REQUEST","LOAD_USER_FAILURE","LOAD_USER_SUCCESS","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_POSTS_SUCCESS","loadUserAPI","get","logInAPI","data","post","logOutAPI","signUpAPI","followAPI","unfollowAPI","changeNicknameAPI","patch","nickname","changeNickname","action","result","type","err","error","response","loadUser","unfollow","follow","logIn","logOut","signUp","console","log","watchChangeNickname","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, delay, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  LOG_IN_SUCCESS,\n  LOG_IN_REQUEST,\n  LOG_IN_FAILURE,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_OUT_FAILURE,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_REQUEST,\n  SIGN_UP_FAILURE,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  FOLLOW_REQUEST,\n  UNFOLLOW_REQUEST,\n  LOAD_USER_REQUEST,\n  LOAD_USER_FAILURE,\n  LOAD_USER_SUCCESS,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n} from \"../reducers/user\";\nimport { LOAD_POSTS_SUCCESS } from \"../reducers/post\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    \n    const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    // yield delay(1000);\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n"]},"metadata":{},"sourceType":"module"}