{"ast":null,"code":"var _jsxFileName = \"/Users/vegabond/gc/NBF/pages/index.js\";\nimport React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.screenY + document.documentElement.clientHeight === documenet.documentElement.scrollHeight) if (hasMorePost) {\n        dispatch({\n          type: LOAD_POSTS_REQUEST\n        });\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this), mainPosts.map((post, index) => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home; //코드스플리팅","map":{"version":3,"sources":["/Users/vegabond/gc/NBF/pages/index.js"],"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePost","post","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","screenY","documenet","addEventListener","removeEventListener","map","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAA9C;AACAd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACd,aAASgB,QAAT,GAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CACEC,MAAM,CAACC,OADT,EAEEC,QAAQ,CAACC,eAAT,CAAyBC,YAF3B,EAGEF,QAAQ,CAACC,eAAT,CAAyBE,YAH3B;AAKA,UACEL,MAAM,CAACM,OAAP,GAAiBJ,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KACAG,SAAS,CAACJ,eAAV,CAA0BE,YAF5B,EAGE,IAAIX,WAAJ,EAAiB;AACjBL,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAET;AADC,SAAD,CAAR;AAGD;AACF;;AACDa,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GApBQ,CAAT;AAsBA,sBACE,QAAC,SAAD;AAAA,eACGP,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADT,EAEGG,SAAS,CAACiB,GAAV,CAAc,CAACf,IAAD,EAAOgB,KAAP,kBACb,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEhB;AAA9B,OAAeA,IAAI,CAACiB,EAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxCD;;AA0CA,eAAexB,IAAf,C,CAEA","sourcesContent":["import React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePost } = useSelector((state) => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      console.log(\n        window.scrollY,\n        document.documentElement.clientHeight,\n        document.documentElement.scrollHeight\n      );\n      if (\n        window.screenY + document.documentElement.clientHeight ===\n        documenet.documentElement.scrollHeight\n      ) if (hasMorePost) {\n        dispatch({\n          type: LOAD_POSTS_REQUEST,\n        });\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  });\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post, index) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n\n//코드스플리팅\n"]},"metadata":{},"sourceType":"module"}