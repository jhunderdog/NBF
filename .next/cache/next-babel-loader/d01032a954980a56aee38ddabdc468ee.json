{"ast":null,"code":"import React from 'react';\nimport { useRouter } from 'next/router';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { END } from 'redux-saga';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/AppLayout';\nimport { useSelector } from 'react-redux';\nimport PostCard from '../../components/PostCard';\nimport Head from \"next/head\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post); // if (router.isFallback) {\n  //     return <div>로딩중...</div>\n  // }\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'http://localhost:3060/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n}; // export async function getStaticPaths() {\n//     return {\n//         paths: [\n//             {params: {id: '1'}},\n//             {params: {id: '2'}},\n//         ],\n//         fallback: false,\n//     }\n// }\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["/Users/jhunderdog/NBF/pages/post/[id].js"],"names":["React","useRouter","wrapper","axios","LOAD_MY_INFO_REQUEST","END","LOAD_POST_REQUEST","AppLayout","useSelector","PostCard","Head","Post","router","id","query","singlePost","state","post","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","console","log","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC,CAHe,CAKf;AACA;AACA;;AACA,sBACI,MAAC,SAAD;AAAA,4BACI,MAAC,IAAD;AAAA,8BACI;AAAA,mBACKF,UAAU,CAACG,IAAX,CAAgBC,QADrB;AAAA,QADJ,eAKI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEJ,UAAU,CAACK;AAA7C,QALJ,eAMI;AAAM,QAAA,QAAQ,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAG,GAAEL,UAAU,CAACG,IAAX,CAAgBC,QAAS;AAA/D,QANJ,eAOI;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,OAAO,EAAEJ,UAAU,CAACK;AAAhD,QAPJ,eAQI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEL,UAAU,CAACM,MAAX,CAAkB,CAAlB,IAAuBN,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAAjF,QARJ,eASI;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAG,6BAA4BT,EAAG;AAA7D,QATJ;AAAA,MADJ,eAaA,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEE;AAAhB,MAbA;AAAA,IADJ;AAiBH,CAzBD,C,CA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMQ,kBAAkB,GAAGrB,OAAO,CAACqB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACArB,EAAAA,KAAK,CAAC2B,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgC,EAAhC;;AACA,MAAIP,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBtB,IAAAA,KAAK,CAAC2B,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgCN,MAAhC;AACH;;AACDD,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAE9B;AADa,GAAvB;AAGAoB,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAE5B,iBADa;AAEnB6B,IAAAA,IAAI,EAAEX,OAAO,CAACY,MAAR,CAAevB;AAFF,GAAvB;AAIAW,EAAAA,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB5B,GAAvB;AACA,QAAMmB,OAAO,CAACQ,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAhBiC,CAA3B;AAiBP,eAAe3B,IAAf","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { END } from 'redux-saga';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/AppLayout';\nimport { useSelector } from 'react-redux';\nimport PostCard from '../../components/PostCard';\nimport Head from \"next/head\";\n\nconst Post = () => {\n    const router = useRouter(); \n    const { id } = router.query;\n    const { singlePost } = useSelector((state) => state.post);\n\n    // if (router.isFallback) {\n    //     return <div>로딩중...</div>\n    // }\n    return (\n        <AppLayout>\n            <Head>\n                <title>\n                    {singlePost.User.nickname}\n                    님의 글\n                </title>\n                <meta name=\"description\" content={singlePost.content}/>\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`}/>\n                <meta name=\"og:description\" content={singlePost.content}/>\n                <meta name=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'http://localhost:3060/favicon.ico'}/>\n                <meta name=\"og:url\" content={`https://nodebird.com/post/${id}`}/>\n\n            </Head>\n        <PostCard post={singlePost}/>\n        </AppLayout>\n    )\n};\n// export async function getStaticPaths() {\n//     return {\n//         paths: [\n//             {params: {id: '1'}},\n//             {params: {id: '2'}},\n//         ],\n//         fallback: false,\n//     }\n// }\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    console.log(context);\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n        type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n        type: LOAD_POST_REQUEST,\n        data: context.params.id,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n})\nexport default Post;"]},"metadata":{},"sourceType":"module"}