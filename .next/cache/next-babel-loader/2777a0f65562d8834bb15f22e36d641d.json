{"ast":null,"code":"import { all, fork, put, delay, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, FOLLOW_REQUEST, UNFOLLOW_REQUEST, LOAD_USER_REQUEST, LOAD_USER_FAILURE } from \"../reducers/user\";\nimport { LOAD_POSTS_SUCCESS } from \"../reducers/post\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    // yield delay(1000);\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/jhunderdog/NBF/sagas/user.js"],"names":["all","fork","put","delay","takeLatest","call","axios","LOG_IN_SUCCESS","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","FOLLOW_REQUEST","UNFOLLOW_REQUEST","LOAD_USER_REQUEST","LOAD_USER_FAILURE","LOAD_POSTS_SUCCESS","loadUserAPI","get","logInAPI","data","post","logOutAPI","signUpAPI","followAPI","unfollowAPI","loadUser","action","result","type","err","error","response","unfollow","follow","logIn","logOut","signUp","console","log","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, delay, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  LOG_IN_SUCCESS,\n  LOG_IN_REQUEST,\n  LOG_IN_FAILURE,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_OUT_FAILURE,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_REQUEST,\n  SIGN_UP_FAILURE,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  FOLLOW_REQUEST,\n  UNFOLLOW_REQUEST,\n  LOAD_USER_REQUEST,\n  LOAD_USER_FAILURE,\n} from \"../reducers/user\";\nimport { LOAD_POSTS_SUCCESS } from \"../reducers/post\";\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/signUp\");\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    \n    const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    // yield delay(1000);\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      //   data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n"]},"metadata":{},"sourceType":"module"}