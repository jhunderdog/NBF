{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from \"redux-saga/effects\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchLogIn)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/vegabond/NBF/sagas/index.js"],"names":["rootSaga","all","fork","watchLogIn","watchLogOut"],"mappings":";;oDACyBA,Q;;AADzB,SAASC,GAAT,QAAoB,oBAApB;AACA,eAAe,SAAUD,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACC,UAAD,CADE,EAEND,IAAI,CAACE,WAAD,CAFE,EAGNF,IAAI,CAACC,UAAD,CAHE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from \"redux-saga/effects\";\nexport default function* rootSaga() {\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchLogIn),\n    ])\n}\n"]},"metadata":{},"sourceType":"module"}