{"ast":null,"code":"var _jsxFileName = \"/Users/jhunderdog/NBF/pages/post/[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [id, \"\\uBC88 \\uAC8C\\uC2DC\\uAE00\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/jhunderdog/NBF/pages/post/[id].js"],"names":["React","useRouter","LOAD_POST_REQUEST","Post","router","id","query"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAKA,SAASC,iBAAT,QAAkC,qBAAlC;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAQI,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;AACA,sBACI;AAAA,eAAMA,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CAND;;GAAMF,I;UACaF,S;;;KADbE,I;;AAyBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport wrapper from '../../store/configureStore';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { END } from 'redux-saga';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nconst Post = () => {\n    const router = useRouter();\n    const { id } = router.query;\n    return (\n        <div>{id}번 게시글</div>\n    )\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    console.log(context);\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n        type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n        type: LOAD_POSTS_REQUEST,\n        data: context.params.id,\n    })\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n})\nexport default Post;"]},"metadata":{},"sourceType":"module"}