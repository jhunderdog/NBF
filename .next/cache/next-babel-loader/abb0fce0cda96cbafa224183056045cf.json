{"ast":null,"code":"import { all, fork, call, take, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/vegabond/NBF/sagas/index.js"],"names":["all","fork","call","take","put","takeEvery","takeLatest","axios","logInAPI","data","post","logOutAPI","addPostAPI","logIn","action","type","result","err","response","logOut","addPost","watchLogIn","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,UAPF,QAQO,oBARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,SAASE,SAAT,GAAqB;AACnB,SAAOJ,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAASE,UAAT,CAAoBH,IAApB,EAA0B;AACxB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUI,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMV,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE,gBADE;AAERN,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,GAAP,EAAY;AACZ,UAAMb,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE,gBADE;AAERN,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMH,MAAM,GAAG,MAAMd,IAAI,CAACS,SAAD,CAAzB;AACA,UAAMP,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE,iBADE;AAERN,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,GAAP,EAAY;AACZ,UAAMb,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE,iBADE;AAERN,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,OAAV,CAAkBN,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAME,MAAM,GAAG,MAAMd,IAAI,CAACU,UAAD,EAAaE,MAAM,CAACL,IAApB,CAAzB;AACA,UAAML,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE,kBADE;AAERN,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,GAAP,EAAY;AACZ,UAAMb,GAAG,CAAC;AACRW,MAAAA,IAAI,EAAE,kBADE;AAERN,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT;AAFX,KAAD,CAAT;AAID;AACF;;AACD,UAAUY,UAAV,GAAuB;AACrB,QAAMf,UAAU,CAAC,gBAAD,EAAmBO,KAAnB,CAAhB;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMhB,UAAU,CAAC,iBAAD,EAAoBa,MAApB,CAAhB;AACD;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMjB,UAAU,CAAC,kBAAD,EAAqBc,OAArB,CAAhB;AACD;;AACD,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACoB,UAAD,CAAL,EAAmBpB,IAAI,CAACqB,WAAD,CAAvB,EAAsCrB,IAAI,CAACsB,YAAD,CAA1C,CAAD,CAAT;AACD","sourcesContent":["import {\n  all,\n  fork,\n  call,\n  take,\n  put,\n  takeEvery,\n  takeLatest,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}