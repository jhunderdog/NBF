{"ast":null,"code":"var _jsxFileName = \"/Users/jhunderdog/NBF/pages/hashtag/[tag].js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: mainPosts.map(c => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: c\n    }, c.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Hashtag;","map":{"version":3,"sources":["/Users/jhunderdog/NBF/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","axios","LOAD_HASHTAG_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","PostCard","wrapper","AppLayout","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","userInfo","user","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst Hashtag = () => {\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const { tag } = router.query;\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\n    const { userInfo } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        const onScroll = () => {\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n                if (hasMorePosts && !loadPostsLoading) {\n                    dispatch({\n                        type: LOAD_HASHTAG_POSTS_REQUEST,\n                        lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length -1].id,\n                        data: tag,\n                    })\n                }\n            }\n        };\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n\n    return (\n        <AppLayout>\n           \n              {mainPosts.map((c) => (\n                  <PostCard key={c.id} post={c}/>\n              ))}\n            \n        </AppLayout>\n    );\n\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        data: context.params.id,\n    });\n    context.store.dispatch({\n        type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n})\n\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}