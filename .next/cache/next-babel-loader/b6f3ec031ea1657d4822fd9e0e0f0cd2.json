{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      retweetError = _useSelector2.retweetError;\n\n  useEffect(function () {\n    console.log('rerender');\n\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [me && /*#__PURE__*/_jsx(PostForm, {}), mainPosts.map(function (post, index) {\n      return /*#__PURE__*/_jsx(PostCard, {\n        post: post\n      }, post.id);\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default Home; //코드스플리팅\n// export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//   console.log('getServerSideProps start');\n//   console.log(context.req.headers);\n//   const cookie = context.req ? context.req.headers.cookie : '';\n//   axios.defaults.headers.Cookie = '';\n//   if (context.req && cookie) {\n//     axios.defaults.headers.Cookie = cookie;\n//   }\n//   context.store.dispatch({\n//     type: LOAD_MY_INFO_REQUEST,\n//   });\n//   context.store.dispatch({\n//     type: LOAD_POSTS_REQUEST,\n//   });\n//   context.store.dispatch(END);\n//   console.log('getServerSideProps end');\n//   await context.store.sagaTask.toPromise();\n// });","map":{"version":3,"sources":["/Users/jhunderdog/NBF/pages/index.js"],"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","retweetError","console","log","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map","index"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;;;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,qBAAeC,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,sBAAoER,WAAW,CAC7E,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAD6E,CAA/E;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,YAAnB,iBAAmBA,YAAnB;AAAA,MAAiCC,gBAAjC,iBAAiCA,gBAAjC;AAAA,MAAmDC,YAAnD,iBAAmDA,YAAnD;;AAIAhB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAIF,YAAJ,EAAkB;AAChBG,MAAAA,KAAK,CAACH,YAAD,CAAL;AACD;AACF,GALQ,EAKN,CAACA,YAAD,CALM,CAAT;AAQAhB,EAAAA,SAAS,CAAC,YAAM;AACd,aAASoB,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIZ,YAAY,IAAI,CAACC,gBAArB,EAAuC;AAAA;;AACrC,cAAMY,MAAM,iBAAGd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACArB,UAAAA,QAAQ,CAAC;AACPsB,YAAAA,IAAI,EAAExB,kBADC;AAEPqB,YAAAA,MAAM,EAANA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AACDN,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACN,YAAD,EAAeC,gBAAf,EAAiCF,SAAjC,CAnBM,CAAT;AAqBA,sBACE,MAAC,SAAD;AAAA,eACGF,EAAE,iBAAI,KAAC,QAAD,KADT,EAEGE,SAAS,CAACoB,GAAV,CAAc,UAACrB,IAAD,EAAOsB,KAAP;AAAA,0BACb,KAAC,QAAD;AAAwB,QAAA,IAAI,EAAEtB;AAA9B,SAAeA,IAAI,CAACiB,EAApB,CADa;AAAA,KAAd,CAFH;AAAA,IADF;AAQD,CA5CD;;;AA6DA,eAAetB,IAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport wrapper from \"../store/configureStore\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    console.log('rerender');\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post, index) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;\n\n//코드스플리팅\n\n// export const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n//   console.log('getServerSideProps start');\n//   console.log(context.req.headers);\n//   const cookie = context.req ? context.req.headers.cookie : '';\n//   axios.defaults.headers.Cookie = '';\n//   if (context.req && cookie) {\n//     axios.defaults.headers.Cookie = cookie;\n//   }\n//   context.store.dispatch({\n//     type: LOAD_MY_INFO_REQUEST,\n//   });\n//   context.store.dispatch({\n//     type: LOAD_POSTS_REQUEST,\n//   });\n//   context.store.dispatch(END);\n//   console.log('getServerSideProps end');\n//   await context.store.sagaTask.toPromise();\n// });"]},"metadata":{},"sourceType":"module"}